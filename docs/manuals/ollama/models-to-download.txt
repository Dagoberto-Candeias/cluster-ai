# Modelos de chat
ollama pull llama3.1:8b
ollama pull llama3.2
ollama pull llama3:8b
ollama pull phi3
ollama pull phi4
ollama pull qwen3
ollama pull mistral
ollama pull gemma2:9b
ollama pull deepseek-coder-v2:16b
ollama pull akuldatta/deepseek-chat-v2-lite:iq4xs
ollama pull akuldatta/deepseek-chat-v2-lite:q4km
ollama pull qwen2.5-coder:32b


# Modelo de vis√£o
ollama pull llava

# Modelos de autocomplete
ollama pull starcoder2:3b
ollama pull starcoder2:7b
ollama pull qwen2.5-coder:1.5b
ollama pull deepseek-coder

# Modelo de embeddings
ollama pull nomic-embed-text




ollama pull llama2

Quando quiser ja baixar e rodar trocar pull por run exemplo: ollama run llama2

Configura√ß√£o da Extens√£o Continue VSCode
models:

 name: Configura√ß√£o Completa Local Otimizada
version: 2.0.0
schema: v1

# === MODELOS OTIMIZADOS POR FUN√á√ÉO ===
models:
  # === MODELO PRINCIPAL PARA CHAT ===
  - name: Llama 3.1 8B Principal
    provider: ollama
    model: llama3.1:8b
    roles:
      - chat
      - edit
      - apply
    defaultCompletionOptions:
      temperature: 0.7
      maxTokens: 4096
      contextLength: 8192
    chatOptions:
      baseSystemMessage: "Voc√™ √© um assistente de programa√ß√£o especializado. Forne√ßa respostas concisas, pr√°ticas e bem estruturadas em portugu√™s brasileiro."

  # === MODELO ESPECIALIZADO PARA C√ìDIGO ===
  - name: DeepSeek Coder V2 16B
    provider: ollama
    model: deepseek-coder-v2:16b
    roles:
      - chat
      - edit
      - apply
    defaultCompletionOptions:
      temperature: 0.3
      maxTokens: 8192
      contextLength: 16384

  # === MODELOS DE CHAT ALTERNATIVOS ===
  - name: Llama 3.2
    provider: ollama
    model: llama3.2
    roles:
      - chat
      - edit
    defaultCompletionOptions:
      temperature: 0.7
      maxTokens: 4096

  - name: Mistral
    provider: ollama
    model: mistral
    roles:
      - chat
      - edit
      - apply
    defaultCompletionOptions:
      temperature: 0.6
      maxTokens: 4096

  - name: Gemma2 9B
    provider: ollama
    model: gemma2:9b
    roles:
      - chat
      - edit
    defaultCompletionOptions:
      temperature: 0.7
      maxTokens: 4096

  - name: Phi 4
    provider: ollama
    model: phi4
    roles:
      - chat
      - edit
    defaultCompletionOptions:
      temperature: 0.7
      maxTokens: 4096

  - name: Qwen 3
    provider: ollama
    model: qwen3
    roles:
      - chat
      - edit
    defaultCompletionOptions:
      temperature: 0.7
      maxTokens: 4096

  # === MODELOS DEEPSEEK CHAT LITE ===
  - name: DeepSeek Chat V2 Lite IQ4XS
    provider: ollama
    model: akuldatta/deepseek-chat-v2-lite:iq4xs
    roles:
      - chat
    defaultCompletionOptions:
      temperature: 0.7
      maxTokens: 4096

  - name: DeepSeek Chat V2 Lite Q4KM
    provider: ollama
    model: akuldatta/deepseek-chat-v2-lite:q4km
    roles:
      - chat
    defaultCompletionOptions:
      temperature: 0.7
      maxTokens: 4096

  # === MODELO DE VIS√ÉO ===
  - name: LLaVA Vision
    provider: ollama
    model: llava
    capabilities:
      - image_input
    roles:
      - chat
    defaultCompletionOptions:
      temperature: 0.7
      maxTokens: 2048

  # === MODELO PRINCIPAL PARA AUTOCOMPLETE ===
  - name: Qwen2.5-Coder 1.5B
    provider: ollama
    model: qwen2.5-coder:1.5b
    roles:
      - autocomplete
    autocompleteOptions:
      debounceDelay: 250
      maxPromptTokens: 1024
      modelTimeout: 150
      onlyMyCode: true
      useCache: true
      useRecentlyEdited: true
    defaultCompletionOptions:
      temperature: 0.2
      maxTokens: 512

  # === MODELOS ALTERNATIVOS PARA AUTOCOMPLETE ===
  - name: StarCoder2 3B
    provider: ollama
    model: starcoder2:3b
    roles:
      - autocomplete
    autocompleteOptions:
      debounceDelay: 200
      maxPromptTokens: 1024
      modelTimeout: 120
      onlyMyCode: true
    defaultCompletionOptions:
      temperature: 0.2
      maxTokens: 512

  - name: StarCoder2 7B
    provider: ollama
    model: starcoder2:7b
    roles:
      - autocomplete
    autocompleteOptions:
      debounceDelay: 300
      maxPromptTokens: 1024
      modelTimeout: 200
      onlyMyCode: true
    defaultCompletionOptions:
      temperature: 0.2
      maxTokens: 512

  - name: DeepSeek Coder
    provider: ollama
    model: deepseek-coder
    roles:
      - autocomplete
    autocompleteOptions:
      debounceDelay: 250
      maxPromptTokens: 1024
      modelTimeout: 180
      onlyMyCode: true
    defaultCompletionOptions:
      temperature: 0.2
      maxTokens: 512

  # === MODELO DE EMBEDDINGS ===
  - name: Nomic Embed Text
    provider: ollama
    model: nomic-embed-text
    roles:
      - embed
    embedOptions:
      maxChunkSize: 512
      maxBatchSize: 10

# === CONTEXTO OTIMIZADO ===
context:
  - provider: codebase
    params:
      nRetrieve: 25
      nFinal: 5
  - provider: file
  - provider: code
  - provider: diff
  - provider: folder
  - provider: open
    params:
      onlyPinned: false
  - provider: terminal
  - provider: problems
  - provider: tree

# === REGRAS CONTEXTUAIS ===
rules:
  - name: Idioma Padr√£o
    rule: "Sempre responda em portugu√™s brasileiro, exceto quando especificamente solicitado outro idioma"

  - name: Qualidade do C√≥digo
    rule: "Priorize c√≥digo limpo, leg√≠vel e bem documentado. Use padr√µes de nomenclatura consistentes e siga as melhores pr√°ticas da linguagem"

  - name: Seguran√ßa e Performance
    rule: "Sempre considere aspectos de seguran√ßa e performance nas solu√ß√µes propostas. Identifique vulnerabilidades potenciais"

  - name: Explica√ß√µes T√©cnicas
    rule: "Forne√ßa explica√ß√µes claras do racioc√≠nio por tr√°s das solu√ß√µes, especialmente para c√≥digo complexo"

  - name: TypeScript
    rule: "Para projetos TypeScript, sempre use tipagem forte, interfaces bem definidas e evite 'any'. Prefira type guards e utility types"
    globs: "**/*.{ts,tsx}"

  - name: Python
    rule: "Para Python, use type hints, siga PEP 8, prefira f-strings e use dataclasses/pydantic para estruturas de dados"
    globs: "**/*.py"

  - name: React
    rule: "Para React, use hooks funcionais, evite prop drilling, implemente error boundaries e otimize re-renders"
    globs: "**/*.{jsx,tsx}"

  - name: Testes
    rule: "Para arquivos de teste, foque em cobertura completa, casos extremos, mocks apropriados e testes leg√≠veis"
    globs: "**/*.{test,spec}.{js,ts,jsx,tsx,py}"

# === PROMPTS PERSONALIZADOS AVAN√áADOS ===
prompts:
  - name: revisar-codigo-completo
    description: "An√°lise completa de c√≥digo com foco em qualidade, seguran√ßa e performance"
    prompt: |
      Analise o c√≥digo selecionado de forma abrangente e sistem√°tica:

      ## üîç AN√ÅLISE DE QUALIDADE
      - **Erros de sintaxe e l√≥gica**: Identifique problemas imediatos
      - **Padr√µes de c√≥digo**: Verifique conformidade com conven√ß√µes
      - **Legibilidade**: Avalie clareza e manutenibilidade
      - **Estrutura**: Analise organiza√ß√£o e arquitetura

      ## üõ°Ô∏è AN√ÅLISE DE SEGURAN√áA
      - **Vulnerabilidades**: Identifique riscos de seguran√ßa
      - **Valida√ß√£o de entrada**: Verifique sanitiza√ß√£o de dados
      - **Autentica√ß√£o/Autoriza√ß√£o**: Analise controles de acesso
      - **Exposi√ß√£o de dados**: Identifique vazamentos potenciais

      ## ‚ö° AN√ÅLISE DE PERFORMANCE
      - **Complexidade algor√≠tmica**: Avalie efici√™ncia
      - **Uso de mem√≥ria**: Identifique vazamentos ou uso excessivo
      - **Opera√ß√µes custosas**: Localize gargalos
      - **Otimiza√ß√µes**: Sugira melhorias espec√≠ficas

      ## üìã SUGEST√ïES DE MELHORIA
      Para cada problema identificado, forne√ßa:
      - Explica√ß√£o clara do problema
      - Impacto potencial
      - Solu√ß√£o espec√≠fica com exemplo de c√≥digo
      - Prioridade (Alta/M√©dia/Baixa)

      Organize a resposta de forma estruturada e priorize os problemas mais cr√≠ticos.

  - name: documentar-api
    description: "Gerar documenta√ß√£o completa para APIs e fun√ß√µes"
    prompt: |
      Crie documenta√ß√£o t√©cnica completa para o c√≥digo selecionado:

      ## üìñ DOCUMENTA√á√ÉO PRINCIPAL
      - **Descri√ß√£o**: Funcionalidade principal e prop√≥sito
      - **Responsabilidades**: O que o c√≥digo faz e n√£o faz
      - **Contexto de uso**: Quando e como usar

      ## üîß ESPECIFICA√á√ÉO T√âCNICA
      - **Par√¢metros**: Tipos, descri√ß√µes e valida√ß√µes
      - **Retorno**: Tipo, estrutura e poss√≠veis valores
      - **Exce√ß√µes**: Erros poss√≠veis e quando ocorrem
      - **Depend√™ncias**: Bibliotecas e m√≥dulos necess√°rios

      ## üí° EXEMPLOS PR√ÅTICOS
      - **Uso b√°sico**: Exemplo simples e direto
      - **Casos avan√ßados**: Cen√°rios complexos
      - **Tratamento de erros**: Como lidar com falhas
      - **Integra√ß√£o**: Como usar com outros componentes

      ## üìä INFORMA√á√ïES ADICIONAIS
      - **Performance**: Complexidade e considera√ß√µes
      - **Limita√ß√µes**: Restri√ß√µes conhecidas
      - **Versioning**: Compatibilidade e mudan√ßas
      - **Testes**: Como testar a funcionalidade

      Use o formato de documenta√ß√£o apropriado para a linguagem (JSDoc, docstring, etc.).

  - name: criar-testes-abrangentes
    description: "Gerar suite completa de testes unit√°rios e de integra√ß√£o"
    prompt: |
      Crie uma suite abrangente de testes para o c√≥digo selecionado:

      ## üß™ ESTRUTURA DOS TESTES
      - **Setup/Teardown**: Configura√ß√£o e limpeza necess√°rias
      - **Mocks e Stubs**: Depend√™ncias simuladas apropriadas
      - **Fixtures**: Dados de teste reutiliz√°veis
      - **Helpers**: Fun√ß√µes auxiliares para testes

      ## ‚úÖ COBERTURA DE CEN√ÅRIOS
      - **Happy Path**: Casos de sucesso principais
      - **Edge Cases**: Casos extremos e limites
      - **Error Cases**: Cen√°rios de falha e exce√ß√µes
      - **Boundary Testing**: Valores lim√≠trofes

      ## üîÑ TIPOS DE TESTE
      - **Unit√°rios**: Testes isolados de fun√ß√µes/m√©todos
      - **Integra√ß√£o**: Testes de intera√ß√£o entre componentes
      - **Performance**: Testes de tempo e mem√≥ria (se relevante)
      - **Regress√£o**: Testes para bugs conhecidos

      ## üìù ORGANIZA√á√ÉO
      - **Describe/Context**: Agrupamento l√≥gico dos testes
      - **Test Names**: Nomes descritivos e claros
      - **Assertions**: Verifica√ß√µes espec√≠ficas e m√∫ltiplas
      - **Comments**: Explica√ß√µes para l√≥gica complexa

      ## üéØ QUALIDADE DOS TESTES
      - **Independ√™ncia**: Testes n√£o devem depender uns dos outros
      - **Determinismo**: Resultados consistentes
      - **Velocidade**: Execu√ß√£o r√°pida
      - **Manutenibilidade**: F√°cil de atualizar

      Use o framework de teste apropriado e inclua instru√ß√µes de execu√ß√£o.

  - name: otimizar-performance
    description: "An√°lise e otimiza√ß√£o detalhada de performance"
    prompt: |
      Analise e otimize a performance do c√≥digo selecionado:

      ## üìä AN√ÅLISE ATUAL
      - **Profiling**: Identifique gargalos de performance
      - **Complexidade**: Analise Big O de algoritmos
      - **Recursos**: Avalie uso de CPU, mem√≥ria e I/O
      - **Benchmarks**: Estabele√ßa m√©tricas atuais

      ## üöÄ OTIMIZA√á√ïES ALGOR√çTMICAS
      - **Estruturas de dados**: Sugira alternativas mais eficientes
      - **Algoritmos**: Implemente vers√µes otimizadas
      - **Caching**: Identifique oportunidades de cache
      - **Lazy loading**: Implemente carregamento sob demanda

      ## üíæ OTIMIZA√á√ïES DE MEM√ìRIA
      - **Memory leaks**: Identifique e corrija vazamentos
      - **Object pooling**: Reutilize objetos quando apropriado
      - **Garbage collection**: Otimize para GC eficiente
      - **Data structures**: Use estruturas memory-efficient

      ## üîÑ OTIMIZA√á√ïES DE I/O
      - **Batch operations**: Agrupe opera√ß√µes similares
      - **Async/await**: Implemente opera√ß√µes ass√≠ncronas
      - **Connection pooling**: Reutilize conex√µes
      - **Compression**: Reduza tamanho de dados transferidos

      ## üìà M√âTRICAS E MONITORAMENTO
      - **KPIs**: Defina m√©tricas de performance
      - **Logging**: Adicione logs de performance
      - **Monitoring**: Sugira ferramentas de monitoramento
      - **Alertas**: Configure alertas para degrada√ß√£o

      Para cada otimiza√ß√£o, forne√ßa:
      - C√≥digo antes/depois
      - Impacto esperado
      - Trade-offs envolvidos
      - M√©tricas para valida√ß√£o

  - name: refatorar-codigo
    description: "Refatora√ß√£o sistem√°tica para melhor arquitetura"
    prompt: |
      Refatore o c√≥digo selecionado seguindo princ√≠pios de clean code:

      ## üèóÔ∏è AN√ÅLISE ARQUITETURAL
      - **SOLID Principles**: Verifique conformidade
      - **Design Patterns**: Identifique padr√µes aplic√°veis
      - **Separation of Concerns**: Analise responsabilidades
      - **Coupling/Cohesion**: Avalie depend√™ncias

      ## üîß REFATORA√á√ïES ESTRUTURAIS
      - **Extract Method**: Separe funcionalidades complexas
      - **Extract Class**: Crie classes para responsabilidades distintas
      - **Move Method**: Reorganize m√©todos em classes apropriadas
      - **Rename**: Melhore nomes de vari√°veis, fun√ß√µes e classes

      ## üì¶ ORGANIZA√á√ÉO DE C√ìDIGO
      - **Modulariza√ß√£o**: Divida em m√≥dulos coesos
      - **Interfaces**: Defina contratos claros
      - **Abstra√ß√µes**: Crie camadas de abstra√ß√£o apropriadas
      - **Dependencies**: Organize e minimize depend√™ncias

      ## üéØ MELHORIAS ESPEC√çFICAS
      - **Error Handling**: Implemente tratamento robusto de erros
      - **Logging**: Adicione logs estruturados
      - **Configuration**: Externalize configura√ß√µes
      - **Testing**: Torne o c√≥digo mais test√°vel

      ## üìã PLANO DE REFATORA√á√ÉO
      1. **Fase 1**: Refatora√ß√µes seguras (renomea√ß√£o, extra√ß√£o)
      2. **Fase 2**: Mudan√ßas estruturais (classes, interfaces)
      3. **Fase 3**: Otimiza√ß√µes arquiteturais
      4. **Valida√ß√£o**: Testes para cada fase

      Mantenha a funcionalidade original e forne√ßa um plano de migra√ß√£o gradual.

  - name: explicar-imagem-tecnica
    description: "An√°lise t√©cnica detalhada de imagens (usar com LLaVA)"
    prompt: |
      Analise a imagem fornecida com foco t√©cnico detalhado:

      ## üëÅÔ∏è AN√ÅLISE VISUAL GERAL
      - **Elementos principais**: Identifique componentes visuais
      - **Layout e estrutura**: Analise organiza√ß√£o espacial
      - **Texto vis√≠vel**: Transcreva e interprete textos
      - **Cores e design**: Avalie esquema visual

      ## üíª AN√ÅLISE T√âCNICA ESPEC√çFICA
      Se for c√≥digo/diagrama:
      - **Linguagem/Framework**: Identifique tecnologias
      - **Padr√µes**: Reconhe√ßa design patterns
      - **Arquitetura**: Analise estrutura do sistema
      - **Fluxo de dados**: Trace o fluxo de informa√ß√µes

      Se for interface/UI:
      - **UX/UI Patterns**: Identifique padr√µes de interface
      - **Responsividade**: Avalie adaptabilidade
      - **Acessibilidade**: Verifique conformidade
      - **Performance**: Analise otimiza√ß√µes visuais

      Se for diagrama/arquitetura:
      - **Componentes**: Identifique elementos do sistema
      - **Relacionamentos**: Analise conex√µes e depend√™ncias
      - **Fluxos**: Trace processos e comunica√ß√µes
      - **Escalabilidade**: Avalie capacidade de crescimento

      ## üîç INSIGHTS T√âCNICOS
      - **Boas pr√°ticas**: Identifique implementa√ß√µes corretas
      - **Problemas potenciais**: Aponte poss√≠veis issues
      - **Melhorias**: Sugira otimiza√ß√µes espec√≠ficas
      - **Alternativas**: Proponha abordagens diferentes

      ## üìö CONTEXTO E RECOMENDA√á√ïES
      - **Documenta√ß√£o**: Sugira documenta√ß√£o relevante
      - **Ferramentas**: Recomende tools apropriadas
      - **Pr√≥ximos passos**: Indique a√ß√µes de follow-up
      - **Recursos**: Aponte materiais de aprendizado

      Forne√ßa insights acion√°veis baseados na an√°lise visual.

# === DOCUMENTA√á√ÉO T√âCNICA EXPANDIDA ===
docs:
  - name: Python Official
    startUrl: https://docs.python.org/3/
  - name: JavaScript MDN
    startUrl: https://developer.mozilla.org/en-US/docs/Web/JavaScript
  - name: TypeScript
    startUrl: https://www.typescriptlang.org/docs/
  - name: React
    startUrl: https://react.dev/
  - name: Node.js
    startUrl: https://nodejs.org/docs/
  - name: Vue.js
    startUrl: https://vuejs.org/guide/
  - name: FastAPI
    startUrl: https://fastapi.tiangolo.com/
  - name: Django
    startUrl: https://docs.djangoproject.com/
  - name: Flask
    startUrl: https://flask.palletsprojects.com/
  - name: Express.js
    startUrl: https://expressjs.com/
  - name: Pandas
    startUrl: https://pandas.pydata.org/docs/
  - name: NumPy
    startUrl: https://numpy.org/doc/
  - name: Pytest
    startUrl: https://docs.pytest.org/
  - name: Jest
    startUrl: https://jestjs.io/docs/
  - name: Docker
    startUrl: https://docs.docker.com/
