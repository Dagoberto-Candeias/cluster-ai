# üèóÔ∏è Arquitetura do Cluster AI

## Vis√£o Geral

O Cluster AI √© um sistema distribu√≠do de processamento de IA que utiliza Dask para computa√ß√£o paralela, Ollama para execu√ß√£o local de modelos de IA, e OpenWebUI para interface web. O sistema √© projetado para ser modular, escal√°vel e f√°cil de usar.

## Componentes Principais

### 1. Servidor Principal
- **Dask Scheduler**: Coordena tarefas distribu√≠das entre workers
- **Ollama Server**: Hospeda modelos de IA localmente
- **OpenWebUI**: Interface web para intera√ß√£o com modelos
- **Nginx Proxy**: Balanceamento de carga e proxy reverso
- **Manager Script**: Orquestra√ß√£o e gerenciamento de todos os servi√ßos

### 2. Workers
- **Workers Locais**: M√°quinas na mesma rede executando dask-worker
- **Workers Remotos**: M√°quinas remotas acess√≠veis via SSH
- **Workers Android**: Dispositivos Android via Termux
- **Workers GPU**: Otimizados para acelera√ß√£o de IA

### 3. Modelos de IA
- **Ollama Models**: Modelos executados localmente
- **Categoriza√ß√£o**: Por tamanho, tipo e especialidade
- **Instala√ß√£o Autom√°tica**: Scripts para download e configura√ß√£o

## Fluxo de Dados

```
Usu√°rio ‚Üí OpenWebUI ‚Üí Ollama API ‚Üí Modelo de IA ‚Üí Resposta
                    ‚Üì
            Dask Scheduler ‚Üí Workers ‚Üí Processamento Paralelo
```

## Arquitetura de Rede

```
Internet
    ‚Üì
[Nginx Proxy] (porta 80/443)
    ‚Üì
[OpenWebUI] (porta 3000) ‚Üê Interface Web
[Ollama API] (porta 11434) ‚Üê Modelos de IA
[Dask Dashboard] (porta 8787) ‚Üê Monitoramento
[Dask Scheduler] (porta 8786) ‚Üê Coordena√ß√£o
    ‚Üì
[Workers] ‚Üê Processamento Distribu√≠do
```

## Seguran√ßa

- **Autentica√ß√£o SSH**: Chaves RSA para acesso remoto
- **Valida√ß√£o de Entrada**: Sanitiza√ß√£o de dados
- **Auditoria**: Logs detalhados de opera√ß√µes
- **Controle de Acesso**: Baseado em roles e usu√°rios

## Escalabilidade

- **Horizontal**: Adicionar mais workers conforme necessidade
- **Vertical**: Otimizar recursos dos workers existentes
- **Geogr√°fica**: Workers em diferentes locais via VPN
- **Heterog√™nea**: Mistura de CPUs, GPUs e dispositivos m√≥veis

## Persist√™ncia de Dados

- **Modelos**: Armazenados em /opt/ollama ou ~/.ollama
- **Configura√ß√µes**: Arquivos .conf e .json
- **Logs**: Rota√ß√£o autom√°tica e backup
- **Backups**: Sistema completo de backup e restaura√ß√£o

## Monitoramento

- **Dask Dashboard**: Status em tempo real do cluster
- **Resource Monitor**: Uso de CPU, mem√≥ria e disco
- **Health Checks**: Verifica√ß√£o autom√°tica de servi√ßos
- **Alertas**: Notifica√ß√µes por email e desktop

## Instala√ß√£o Plug-and-Play

### Workers Android
1. Instalar Termux no dispositivo
2. Executar script de instala√ß√£o autom√°tica
3. Worker se registra automaticamente no cluster

### Workers Linux
1. Executar script de descoberta autom√°tica
2. Configura√ß√£o SSH autom√°tica
3. Registro no cluster principal

## Categorias de Modelos

### Por Tamanho
- **Pequenos** (< 2GB): Llama 2 7B, Mistral 7B
- **M√©dios** (2-7GB): Llama 2 13B, CodeLlama 7B
- **Grandes** (7-15GB): Llama 2 70B, Mixtral 8x7B
- **Enormes** (> 15GB): Modelos especializados

### Por Tipo
- **Texto**: Gera√ß√£o e compreens√£o de texto
- **C√≥digo**: Programa√ß√£o e desenvolvimento
- **Multimodal**: Texto + imagens
- **Especializados**: Matem√°tica, medicina, etc.

### Por Especialidade
- **Geral**: Uso cotidiano
- **Programa√ß√£o**: Desenvolvimento de software
- **Criativo**: Arte e escrita
- **Anal√≠tico**: An√°lise de dados
- **Educacional**: Ensino e aprendizado

## Otimiza√ß√£o de Recursos

### CPU Workers
- Foco em tarefas paralelas leves
- Otimiza√ß√£o para m√∫ltiplos n√∫cleos
- Efici√™ncia energ√©tica

### GPU Workers
- Acelera√ß√£o de modelos de IA
- Processamento de dados grandes
- Treinamento de modelos

### Android Workers
- Expans√£o do cluster m√≥vel
- Processamento distribu√≠do
- Backup de recursos

## Backup e Recupera√ß√£o

- **Configura√ß√µes**: Backup autom√°tico di√°rio
- **Modelos**: Sincroniza√ß√£o entre workers
- **Dados**: Persist√™ncia em volumes Docker
- **Restaura√ß√£o**: Scripts automatizados

## Conclus√£o

A arquitetura do Cluster AI foi projetada para ser flex√≠vel, escal√°vel e f√°cil de manter. Cada componente tem responsabilidades claras e se integra perfeitamente com os outros, permitindo expans√£o e otimiza√ß√£o conforme as necessidades do usu√°rio.
