apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cluster-ai-redis-cluster
  namespace: cluster-ai
  labels:
    app.kubernetes.io/name: redis-cluster
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: cluster-ai
spec:
  serviceName: cluster-ai-redis-cluster
  replicas: 6  # Redis Cluster requires at least 6 nodes
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-cluster
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-cluster
        app.kubernetes.io/component: cache
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        ports:
        - containerPort: 6379
          name: redis
        - containerPort: 16379
          name: cluster
        command:
        - redis-server
        - /etc/redis/redis.conf
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-config
        configMap:
          name: cluster-ai-redis-cluster-config
  volumeClaimTemplates:
  - metadata:
    name: redis-data
    labels:
      app.kubernetes.io/name: redis-cluster
      app.kubernetes.io/component: cache
  spec:
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: 10Gi
    storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: cluster-ai-redis-cluster
  namespace: cluster-ai
  labels:
    app.kubernetes.io/name: redis-cluster
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: cluster-ai
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  - port: 16379
    targetPort: 16379
    name: cluster
  clusterIP: None
  selector:
    app.kubernetes.io/name: redis-cluster
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-ai-redis-cluster-config
  namespace: cluster-ai
  labels:
    app.kubernetes.io/name: redis-cluster
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: cluster-ai
data:
  redis.conf: |
    # Redis Cluster Configuration
    cluster-enabled yes
    cluster-config-file /data/nodes.conf
    cluster-node-timeout 5000
    cluster-migration-barrier 1
    cluster-require-full-coverage no

    # Memory optimization
    maxmemory 400mb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5

    # Persistence
    appendonly yes
    appendfsync everysec
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    # Performance tuning
    tcp-keepalive 300
    timeout 0
    databases 16

    # Security
    protected-mode no
    bind 0.0.0.0

    # Logging
    loglevel notice
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cluster-ai-redis-cluster-init
  namespace: cluster-ai
  labels:
    app.kubernetes.io/name: redis-cluster-init
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: cluster-ai
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: redis-cluster-init
        image: redis:7.2-alpine
        command:
        - /bin/sh
        - -c
        - |
          # Wait for all Redis nodes to be ready
          echo "Waiting for Redis nodes to be ready..."
          for i in $(seq 0 5); do
            while ! redis-cli -h cluster-ai-redis-cluster-$i.cluster-ai-redis-cluster.cluster-ai.svc.cluster.local ping > /dev/null 2>&1; do
              echo "Waiting for cluster-ai-redis-cluster-$i..."
              sleep 5
            done
            echo "Node cluster-ai-redis-cluster-$i is ready"
          done

          # Create Redis Cluster
          echo "Creating Redis Cluster..."
          echo "yes" | redis-cli --cluster create \
            cluster-ai-redis-cluster-0.cluster-ai-redis-cluster.cluster-ai.svc.cluster.local:6379 \
            cluster-ai-redis-cluster-1.cluster-ai-redis-cluster.cluster-ai.svc.cluster.local:6379 \
            cluster-ai-redis-cluster-2.cluster-ai-redis-cluster.cluster-ai.svc.cluster.local:6379 \
            cluster-ai-redis-cluster-3.cluster-ai-redis-cluster.cluster-ai.svc.cluster.local:6379 \
            cluster-ai-redis-cluster-4.cluster-ai-redis-cluster.cluster-ai.svc.cluster.local:6379 \
            cluster-ai-redis-cluster-5.cluster-ai-redis-cluster.cluster-ai.svc.cluster.local:6379 \
            --cluster-replicas 1

          echo "Redis Cluster created successfully!"
