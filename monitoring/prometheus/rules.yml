groups:
  - name: cluster-ai.rules
    rules:
      # Backend Health Checks
      - alert: BackendDown
        expr: up{job="cluster-ai-backend"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Cluster AI Backend is down"
          description: "Cluster AI Backend has been down for more than 5 minutes."

      - alert: BackendHighErrorRate
        expr: rate(http_requests_total{job="cluster-ai-backend", status=~"5.."}[5m]) / rate(http_requests_total{job="cluster-ai-backend"}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate on Cluster AI Backend"
          description: "Error rate is {{ $value }} errors per second"

      # Frontend Health Checks
      - alert: FrontendDown
        expr: up{job="cluster-ai-frontend"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Cluster AI Frontend is down"
          description: "Cluster AI Frontend has been down for more than 5 minutes."

      # Database Health Checks
      - alert: DatabaseDown
        expr: up{job="postgresql"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL Database is down"
          description: "PostgreSQL has been down for more than 5 minutes."

      - alert: DatabaseHighConnections
        expr: pg_stat_activity_count{datname="cluster_ai"} > 100
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database connections"
          description: "Database has {{ $value }} active connections"

      # Redis Health Checks
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Redis Cache is down"
          description: "Redis has been down for more than 5 minutes."

      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Redis high memory usage"
          description: "Redis memory usage is {{ $value | humanizePercentage }}"

      # Kubernetes Node Health
      - alert: NodeDown
        expr: up{job="kubernetes-nodes"} == 0
        for: 10m
        labels:
          severity: critical
        annotations:
          summary: "Kubernetes node is down"
          description: "Node {{ $labels.kubernetes_node_name }} has been down for more than 10 minutes."

      - alert: NodeHighCPUUsage
        expr: rate(node_cpu_seconds_total{mode!="idle"}[5m]) / rate(node_cpu_seconds_total[5m]) > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage on node"
          description: "CPU usage is {{ $value | humanizePercentage }} on node {{ $labels.kubernetes_node_name }}"

      - alert: NodeHighMemoryUsage
        expr: (1 - node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on node"
          description: "Memory usage is {{ $value | humanizePercentage }} on node {{ $labels.kubernetes_node_name }}"

      # Pod Health
      - alert: PodRestarting
        expr: increase(kube_pod_container_status_restarts_total[10m]) > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Pod is restarting"
          description: "Pod {{ $labels.kubernetes_pod_name }} in namespace {{ $labels.kubernetes_namespace }} is restarting"

      - alert: PodNotReady
        expr: kube_pod_status_ready{condition="false"} == 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Pod is not ready"
          description: "Pod {{ $labels.kubernetes_pod_name }} in namespace {{ $labels.kubernetes_namespace }} is not ready"

  - name: cluster-ai.custom.metrics
    rules:
      # Custom Application Metrics
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="cluster-ai-backend"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time"
          description: "95th percentile response time is {{ $value }}s"

      - alert: LowThroughput
        expr: rate(http_requests_total{job="cluster-ai-backend"}[5m]) < 10
        for: 10m
        labels:
          severity: info
        annotations:
          summary: "Low request throughput"
          description: "Request rate is {{ $value }} req/s"
