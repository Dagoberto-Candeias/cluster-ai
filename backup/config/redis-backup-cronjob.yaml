apiVersion: batch/v1
kind: CronJob
metadata:
  name: cluster-ai-redis-backup
  namespace: cluster-ai
  labels:
    app.kubernetes.io/name: redis-backup
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: cluster-ai
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM (1 hour after PostgreSQL backup)
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 3
      activeDeadlineSeconds: 1800  # 30 minutes timeout
      template:
        metadata:
          labels:
            app.kubernetes.io/name: redis-backup
            app.kubernetes.io/component: backup
        spec:
          serviceAccountName: cluster-ai-backup-sa
          restartPolicy: OnFailure
          containers:
          - name: redis-backup
            image: bitnami/redis:7.2
            command:
            - /bin/bash
            - -c
            - |
              # Install required tools
              apt-get update && apt-get install -y curl

              # Download backup script
              curl -o /tmp/redis-backup.sh https://raw.githubusercontent.com/your-org/cluster-ai/main/backup/scripts/redis-backup.sh
              chmod +x /tmp/redis-backup.sh

              # Run backup
              /tmp/redis-backup.sh
            env:
            - name: BACKUP_DIR
              value: "/backup"
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
            - name: redis-data
              mountPath: /data
              readOnly: true
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: cluster-ai-backup-pvc
          - name: redis-data
            persistentVolumeClaim:
              claimName: cluster-ai-redis-pvc
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            fsGroup: 1001
